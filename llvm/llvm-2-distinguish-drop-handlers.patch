From 9bf355d26759af2d1a7db329f2e6483f753ca990 Mon Sep 17 00:00:00 2001
From: Zhiyao Ma <zhiyao.ma.98@gmail.com>
Date: Wed, 12 Mar 2025 14:52:57 -0400
Subject: [PATCH] Distinguish drop handlers when requesting more stack.

---
 llvm/lib/Target/ARM/ARMFrameLowering.cpp | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/llvm/lib/Target/ARM/ARMFrameLowering.cpp b/llvm/lib/Target/ARM/ARMFrameLowering.cpp
index 20c2d9b73a0a..be2f99ec0252 100644
--- a/llvm/lib/Target/ARM/ARMFrameLowering.cpp
+++ b/llvm/lib/Target/ARM/ARMFrameLowering.cpp
@@ -3425,6 +3425,25 @@ void ARMFrameLowering::adjustForSegmentedStacks(
   }
 
 # else
+
+  // By default, the SVC number of `more_stack` is 255.
+  auto svc_num = 255;
+
+  auto func_name = MF.getName().str();
+
+  // However, if a function is a drop handler, use the number 254 for
+  // `more_stack_by_drop`.
+  if (func_name.substr(0, 12) == "_ZN4core3ptr") {
+    size_t idx = 12;
+    while (idx < func_name.length() && func_name[idx] >= '0' && func_name[idx] <= '9')
+      idx += 1;
+
+    if (func_name.substr(idx, 13) == "drop_in_place") {
+      svc_num = 254;
+    }
+  }
+
+
   if (Thumb2) {
     // If r12 is live, preserve its original value before using it as the
     // scratch register.
@@ -3614,7 +3633,7 @@ void ARMFrameLowering::adjustForSegmentedStacks(
       .addReg(ARM::CPSR);
 
   // Otherwise, call SVC
-  BuildMI(AllocMBB, DL, TII.get(ARM::tSVC)).addImm(255).add(predOps(ARMCC::AL));
+  BuildMI(AllocMBB, DL, TII.get(ARM::tSVC)).addImm(svc_num).add(predOps(ARMCC::AL));
 
   assert(AlignedStackSize < 65536);
   assert(AlignedStackSize % 4 == 0);
-- 
2.39.5 (Apple Git-154)

